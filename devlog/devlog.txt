////////////////////
2015.08.16
ADC入力をLCD出力成功．
オペアンプは反転入力じゃないとバイアスが増幅されるから反転入力に変更．
ただFFTするとそれだけで150msくらいかかってる．
FFTに入れるデータ数を4096->1024に縮小．
それでも80msくらい周期になる．
ディスプレイ更新用のSPIクロック2.5M(スペック2M)->10Mでも実力動く．
これなら51.28ms周期で更新できる．
-
maxValueのスケーリングが効いてないっぽい，DCINPOSを0にしたらなぜか効いた．

////////////////////
2015.08.14
gen出力をLCD出力成功，FFTも

////////////////////
2015.08.13
ssp設定．LSBファーストはSSPではできなそう．マニュアルでやるしか無い．
DEBUGでビルドするとundefined reference to `check_failed'でビルド通らない．
Releaseにすると通る．
-
LCD実装
そこそこ苦労したけどなんとか50ms周期で更新に成功．
ただポーリング出力だと演算に使えるリソースがなくなる?
割り込みかM0を使う?
まぁダメになってから考えよう

////////////////////
2015.08.12
FFT
仮実装したけどFFT_SAMPLEサイズが4096だとHardFault_Handlerに入る．
サンプル通り512なら行ける．
よく見たらbufのLUTを埋める段階でfaultが入る．
結果LUTサイズが2046なのに4096まで書こうとしてた．割り込みはいるのか．すげぇ．
4096で無事実装できた．
ADも同じサンプル数にすれば共通化できる．
79.872kspsで設定

////////////////////
2015.08.11
sin波生成
  LabToolのgenerator_dac.cにgen_dac_Configureがある．たぶんこれがそう
  トライアンドエラーはあったが割りと簡単に出来た．
-
ADCサンプリング周期はディスプレイ更新速度に合わせる(20Hz?->50ms周期)
  ->DMA完了割り込みでLEDポートトグルしてみる
    (オシロで見る,視認性でディスプレイ予測)
  ->トグル周期が不定期．5ms~300msくらいでトグルされる
  割り込み設定をbuffer1がFULLの時のみにする
    ->変わらない
  どっちもOFF
    ->割り込みはいらないから一応設定は効いてる？buffer0FULLだけでも不定期
  sprintf削除したら85msくらいで安定した．何だそれ
  PLL0を150kにすると/4で37.5kHzだからちょうどいいかと思ってたけど，
  PLL0の下限が4.3MHzだった．このせいで周期が不安定になってたらしい．
  PLL0を40Mのままにして/4を/1000にしたらちょうどよくなった．
-
FFT
  arm_math.hにAPIありそう．
  arm_cfft_radix4_init_f32()  配列初期化,input配列は実数,虚数の必要がある？
  arm_cfft_radix4_f32() FFT，配列には実数・虚数が入る
  arm_cmplx_mag_f32() 実数に変換
  arm_max_f32() 最大値サーチ?
  の順に実行すればいいっぽい
-
ロータリーエンコーダ
FMReceiverについてる奴は実測5ms周期で取れば十分なくらい．
5ms割り込みでみてui作ろう

////////////////////
2015.08.10
MEMSマイクSP0103に接続すると普通に声だして20mVppくらい．
0.8Vppに増幅するには40倍増幅できる増幅回路が必要．
ボリュームでいじるなら入力インピーダンスを気にしなくていい非反転がいいか．
上47k,下10kボリュームなら5.7~無限倍まで増幅可能,実質1.2kΩまで落とせば40倍
倍率制限のために下側は直列に470Ω入れよう．6mA流せれば耐えられる．10mA品アンプ．
出力に1kΩ直列で付けてDiで逃がす？でも3.3Vでアンプ組めば超えないか．
0~1Vに抑えたいならそもそも逃がし先がない．ツェナーを組む？
秋月にちょうどいい定数ないし，ACだしたぶん大丈夫．
試作用部品購入
  変換
    1.27mmピッチ基板
  ディスプレイ
    LS027B4DH01 x2
    変換基板
  イヤホンジャック
    x5
  調整用ボリューム
    10k x5
  ロータリーエンコーダ
    PEC11S-9220K-S0015  x2
    つまみABS-28  x2
  マイクアンプ
    NJM2732M
  表面実装用スピーカー
    ＵＭ１５１５ＩＡ０８５  x2
  スピーカードライバ(TPA2001D1PW)
  DAコンバータ
    ＭＣＰ４７２６Ａ
-
I2C,SPI使えそうか検討
  I2CはFMreceiverでI2C使ってるからui.cのi2clcd_init()周りを移植すればいけそう
  DACは13.8kHz(72.5us)ステップが限界．感覚的に3倍くらいの周波数はほしいから，
  2kHz以下の信号しか満足に出ない
    ->MCP3002-I/Pに変更
  SPIはLabToolでmainにspi_control_initがコネクタに出てるSSP1を使うやつだから
  そのまま移植できそう．
  独自のspi_control.cからライブラリのlpc43xx_ssp.cを使ってる
-
sin波生成
  LabToolのgenerator_dac.cにgen_dac_Configureがある．たぶんこれがそう
-
FFT移植
ADのbit数を表示器の限界に合わせて絞る
  ->縦は240pxだから256(8bit)でいい(タイムドメイン)

////////////////////
2015.08.09
AD周りのリファクタリング完了．
AD値がおかしい．動いてはいるけど3.3Vにショートしても2560までしか行かない．
max4096のはず．(0Vの時は0になる)
ADC3がADCリファレンス(マイナス)のはずだけど回路上はOPENで，
デバイス内で0.5Vバイアスする設定になってる．
・取れてるけど読み出しがおかしい
  ->FIFO格納方法を32bitに２個->1個にする
    ・かわらない
  ->ボリューム付けて値の変化を見る．
    ・かなり狭い範囲では値が動くけど，4096に張り付くし下は1730くらいしかならない
      (ADC3GND,バイアスなし)
    ・0~4096,上はすぐ張り付く(ADC3OPEN,バイアスなし)
    ・0~4096,上はすぐ張り付く,下に遊びがある(ADC3OPEN,バイアスあり)
      一定範囲を拡大している説が有力
・設定がおかしい?
  ->LabToolのソース見てみる
    ・ほぼfmreceiverとおなじ．
  ->データシート探る
    "Measurement range 0 to 1.2V"なんてこったい
    実測0.9Vまで．NEGに対し±0.4Vが測定範囲
    もう少し高い位置(0.6V)でバイアスしたらフルレンジ(±0.6V)で使える?
    3.3Vを20k/4.7k=0.628V
    3.3Vを10k/2.2k=0.595V
    3.3Vを6.8k/1.5k=0.596V
    試しに3.3V/2を入れて中点から±0.6取れるか
      ->バイアス1.22Vで-0.5V~+1.28Vおかしい．フルスケールで1.8V近い．
      ->内部バイアスありで1.26V,-0.48~+1.69Vフルスケールで2V
    1//1/1で内部バイアスあり1.745V,-0.6~+1.479V(2560)でサチる
    OPEN内部バイアスあり0.5V,-0.4V~+0.4V
    OPEN内部バイアスなし0.51V,-0.4V~+0.4V変わんねーじゃん．
  とりあえず中点が中心に来る内部バイアスが扱いやすいか．
  内部バイアスかけて入力アンプを4.7uFでカットすれば
  4.7uFと内部バイアス並列抵抗5kでカットオフ7Hzくらい．十分
明日はMEMSマイクつなげて一定期間をコピーしてダンプしてみる．

////////////////////
2015.08.08
Lチカプログラムをコピーして削ってく．
-
プロジェクトのインポートは，ワーキングスペースに
同じ名前のディレクトリがあると失敗する．
ディレクトリを削除して実行．
-
以下の文が実行されているから，CMSISを何処かで定義している．
ソースには見つからないからビルド時に
eclipceが自動でコンパイルオプションにつけてる?
#ifdef __USE_CMSIS
#include "LPC43xx.h"
#endif
-
crp.cを削除したら実行できなくなった．
__CODE_REDを何処かで定義していて，これをインクルードしないと動かないっぽい．
#if defined (__CODE_RED)
#include <NXP/crp.h>
#endif
-
printfが使えるらしい．
http://tomowatanabe.hatenablog.com/entry/2013/10/09/214259
プロジェクトを右クリック->propaties->C/C++build->settings->Tool Settings
  ->MCU Linker->Managed Linker Script->Libraryを
  RedLinb(none)からRedlib(semihost)に変更
コンソールに表示できた．
バイナリサイズ
  変更前: 3,584byte
  変更後:14,008byte
printf入れるだけで10kbyteも増えてる．ぜんぜん違う．
-
FMreceiverのソースと比較すると，"cr_startup_lpc43xx.c"のResetISRの前に
__attribute__ ((section(".after_vectors")))
が追加されてる．
-
I/F
  ADC->DMA->演算->I2C->DAC(MCP4706)
                ->SPI->モニタ(LS027B4DH01)
  ロータリエンコーダ->GPIO(割り込み)->モード切り替え
-
Lチカプログラムは94MHzで動いてるっぽい．FMはclkcfg.cでクロックアップしてる
(DIRECTレジスタ．0x4005 0020)
-
TODO
サンプルとlabtoolのドライバ比較
HP流し読み
AD+DMAをダウンクロックして実装->printで値確認
I2C実装でとりあえずLCD表示
SPI実装してディスプレイいじる
信号処理実装

////////////////////
2015.08.01
アイディア出し
音と表示を使った物が作りたい．わかりやすいし．
オシロスコープもいいけど，音に絞った計測器で波形とFFTを切り替え表示．
イヤホンジャックからの入力を表示/マイク入力もあると面白い．
入力を表示するだけだと面白く無いから出力をフィードバックして入力したい．
出力は波形の合成で作る．
複数chでそれぞれ波形(sin/矩形波/三角波/鋸波)と振幅を指定し，
それを四則演算で計算した結果をスピーカー/イヤホンジャック出力．
その波形は演算結果を直接/マイク入力/イヤホンジャック(出力を入力にする)の
3パターンでモニタに出力．
-
UIはディスプレイと，
ディスプレイ横に縦軸操作/メニューカーソル縦移動用のダイヤル
(変化量の微分値or移動平均値で+/-を入力判定．
 ロパスト性を上げるのに一定時間以上超えたら確定)
ディスプレイ下にも横軸操作/メニューカーソル移動用のダイヤル
エンターキーとエスケープキー，よく使う機能にボタン割り当て
-
部品構成
  ディスプレイ(LS027B4DH01)
  制御基板(LPC-LINK2_DMA転送使う)
  I/F基板(拡張部品とコネクタやボタン)
  イヤホンジャック(入力)
    調整用ボリューム
  イヤホンジャック(出力)_保護いる?
    調整用ボリューム
  ダイヤル(ロータリーエンコーダEC16B242040R / PEC11S-9220K-S0015_つまみABS-28)
    横軸
    縦軸
    ※ランド補強(VIAも)
  ボタン(1273HA-160G-G)
    エンター
    エスケープ
    その他
  マイク(SP0103)
    調整用ボリューム
  マイクアンプ
    NJM2732M
  表面実装用スピーカー(ＵＭ１５１５ＩＡ０８５)
    調整用ボリューム
  スピーカードライバ(TPA2001D1PW)
  DAコンバータ
    ＭＣＰ４７２６Ａ


